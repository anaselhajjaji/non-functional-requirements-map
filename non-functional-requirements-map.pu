@startmindmap "Non-Functional Requirements Map"

+ Non-Functional\nRequirements (NFRs)

++ Reliability
+++ Resiliency
++++_ Definition
+++++_ Ability to recover from infrastructure or service disruptions
++++_ Technics
+++++ Disaster Recovery Strategy (DR)
++++++_ Metrics
+++++++_ **Recovery Time Objective (RTO)**\nthe maximum acceptable delay between the interruption and restoration of service
+++++++_ **Recovery Point Objective (RPO)**\nthe maximum acceptable amount of time since the last data recovery point
++++++_ Technics
+++++++_ Monitor a KPI metric (business value) and run automation when a threshold is breached
+++++++_ Recreate scenarios that led to failures, test and fix before real failure scenario occurs
+++ Availability
++++_ Definition
+++++_ The percentage of time that a service is available for use
++++_ Metrics
+++++_ Based on requests\navailability = Success Req / Valid Req
+++++_ Sequenced dependencies\navailability = avail_invoked_serv * avail_dep1 * avail_dep2
+++++_ Redundant component (2)\navailability = avail_max - ((100-avail_dependency)*(100-avail_dependency))
+++++_ If availability is not known\navailability_est = **MTBF Mean Time Between Failure** / (MTBF + **MTTR Mean Time to Recover**)
++++_ Technics
+++++_ Scale horizontally and Load Balancing\nReplace one large resource with multiple small resources\nDistribute requests accross multiple smaller resources
+++++_ Automatic scalling\nmonitor demand and automate the addition and removal of resources

++ Security
+++ Control Vulnerabilities
++++_ Technics
+++++_ Review the [[https://cve.mitre.org/ The Common Vulnerabilities and Exposures (CVE) List]]\nof the software components and fix if needed (better if automated)
+++ Identity and access management
++++_ Identity management
+++++_ Definition
++++++_ **Human identities**\nRequires identity of different actors accessing the environment / service
++++++_ **Machine identity**\nRequires identity for a component trying to access the environment / service
+++++_ Technics
++++++_ Require **MFA (Multi Factor Authentication)**
++++++_ Enforce minimum password length
++++++_ Enforce password complexity to make it difficult to guess
++++++_ Allow users to change their own passwords
++++++_ Create individual identities instead of shared credentials

++ Cost
++ Performance

-- Maintainability

@endmindmap